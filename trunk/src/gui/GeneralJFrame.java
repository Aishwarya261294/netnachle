package gui;

import domain.controller.Controller;
import domain.controller.MatrixHandler;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Toolkit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

public class GeneralJFrame extends javax.swing.JFrame {
    
    protected Controller _controller;
    // Color Scheme:
    public static Color backgroundColor = Color.DARK_GRAY;
    public static Color headerColor = new Color(255, 51, 51);
    public static Color linkHeaderColor = new Color(155, 51, 51);
    public static Color regularFontColor = Color.LIGHT_GRAY;
    public static Color headersFontColor = Color.WHITE;
    
    
    /** Creates new form generalJFrame */
    public GeneralJFrame() {
        System.out.println("Remove Heritage");
        initComponents();
    }
    
    public static void setFrameAtCenter(JFrame frame){
        int width = frame.getWidth();
        int height = frame.getHeight();
        frame.setResizable(false);
        Toolkit t = Toolkit.getDefaultToolkit();
        //frame.setSize(1320, 240);
        int x = (int)((t.getScreenSize().getWidth() - width) / 2);
        int y = (int)((t.getScreenSize().getHeight() - height) / 2);
        frame.setLocation(x-20, 10);
        frame.setLocation(x, y);
        //setLocationRelativeTo(null);
        //setBounds(x-30, 10, width, height);
    }
    public static void setLinkEntered(JLabel label, Color color){
        label.setCursor(new Cursor(Cursor.HAND_CURSOR));
        label.setForeground(color);
    }
    public static void setLinkExited(JLabel label, Color color){
        label.setForeground(color);
    }
    public static byte[] encrypt(String x)   throws Exception
    {
        java.security.MessageDigest d =null;
         d = java.security.MessageDigest.getInstance("SHA-1");
         d.reset();
         d.update(x.getBytes());
         //return  d.digest();
         return x.getBytes();
    }    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Movie Recommendation System by NetNachle");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static void setBackgroundColor(Color backgroundColor) {
        GeneralJFrame.backgroundColor = backgroundColor;
    }

    public static void setHeaderColor(Color headerColor) {
        GeneralJFrame.headerColor = headerColor;
    }

    public static void setLinkHeaderColor(Color linkHeaderColor) {
        GeneralJFrame.linkHeaderColor = linkHeaderColor;
    }

    public static void setRegularFontColor(Color regularFontColor) {
        GeneralJFrame.regularFontColor = regularFontColor;
    }

    public static void setHeadersFontColor(Color headersFontColor) {
        GeneralJFrame.headersFontColor = headersFontColor;
    }
    public void setController(Controller controller) {
        _controller = controller;
    }
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GeneralJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(GeneralJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(GeneralJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(GeneralJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
	java.awt.EventQueue.invokeLater(new Runnable() {
	    public void run() {
                Controller controller = new Controller(new MatrixHandler());
                Entrance entrance = null;
		try{
                    entrance = new Entrance(controller);
                } catch (Exception e){
                    JOptionPane.showMessageDialog(null, "Please enter all details Lesbo",
                    "", JOptionPane.ERROR_MESSAGE);
                };
                if (entrance != null)
                    entrance.setVisible(true);
	    }
	});
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
